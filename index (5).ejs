<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Status</title>
    <link rel="stylesheet" href="./style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Bungee+Spice&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <style>
        .scrollable-orders {
            max-height: 790px;
            overflow-y: hidden;
            position: relative;
        }
        .liveOrders {
            height: 82px;
            padding: 10px;
        }
    </style>
</head>
<body>
    <video id="background-video" class="background-video" autoplay muted loop>
        <source src="./Hfpbgay.mp4" type="video/mp4">
    </video>

    <a href="/adminLogin">
        <div class="adminLoginDiv">
            <p class="adminLoginP">admin login</p>
        </div>
    </a>  

    <div id="ejsdiv">
        <div class="ticketDiv-Parent">
            <div class="ticketDiv readyForPickup">
                <h1>Ready For Pickup</h1>
                <div id="readyForPickupOrders" class="scrollable-orders">
                    <% if (orders.length === 0 || !orders.some(order => order.status === "ready for pickup")) { %>
                        <p>No orders available.</p>
                    <% } else { %>
                        <% orders.filter(order => order.status === "ready for pickup").forEach(function(order) { %>  
                            <div class="liveOrders" data-order-id="<%= order.id %>">
                                <ul><%= order.ticketName || 'Unknown' %></ul>
                                <ul><%= order.items || 'No items' %></ul>
                                <ul class="finalUl"><%= order.createdAtEST || 'Unknown time' %></ul>
                            </div>
                        <% }); %>
                    <% } %>
                </div>
            </div>

            <div class="ticketDiv inOven middleDiv">
                <h1>In The Oven</h1>
                <div id="inOvenOrders" class="scrollable-orders">
                    <% if (orders.length === 0 || !orders.some(order => order.status === "in the oven")) { %>
                        <p>No orders available.</p>
                    <% } else { %>
                        <% orders.filter(order => order.status === "in the oven").forEach(function(order) { %>  
                            <div class="liveOrders" data-order-id="<%= order.id %>">
                                <ul><%= order.ticketName || 'Unknown' %></ul>
                                <ul><%= order.items || 'No items' %></ul>
                                <ul class="finalUl"><%= order.createdAtEST || 'Unknown time' %></ul>
                            </div>
                        <% }); %>
                    <% } %>
                </div>
            </div>

            <div class="ticketDiv prePrep">
                <h1>Orders</h1>
                <div id="prePrepOrders" class="scrollable-orders">
                    <% if (orders.length === 0 || !orders.some(order => order.status === "pending")) { %>
                        <p>No orders available.</p>
                    <% } else { %>
                        <% orders.filter(order => order.status === "pending").forEach(function(order) { %>  
                            <div class="liveOrders" data-order-id="<%= order.id %>">
                                <ul><%= order.ticketName || 'Unknown' %></ul>
                                <ul><%= order.items || 'No items' %></ul>
                                <ul class="finalUl"><%= order.createdAtEST || 'Unknown time' %></ul>
                            </div>
                        <% }); %>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const socket = io({
                reconnection: true,
                reconnectionAttempts: Infinity,
                reconnectionDelay: 1000,
                reconnectionDelayMax: 5000
            });

            socket.on('connect', () => {
                console.log('Connected to server');
            });

            socket.on('orders-updated', function(orders) {
                console.log('Received updated orders:', orders);
                updateOrders(orders);
            });

            socket.on('order-update', function(data) {
                console.log('Received order update:', data);
                updateOrder(data);
            });

            socket.on('disconnect', () => {
                console.log('Disconnected from server');
            });

            function updateOrders(orders) {
                updateOrderStatus('ready for pickup', orders);
                updateOrderStatus('in the oven', orders);
                updateOrderStatus('pending', orders);
            }

            function updateOrderStatus(status, orders) {
                const containerId = statusToContainerId(status);
                const container = document.getElementById(containerId);

                if (!container) {
                    console.error("No container found for status:", status);
                    return;
                }

                container.innerHTML = '';

                const relevantOrders = orders.filter(order => order.status === status);

                relevantOrders.forEach(order => {
                    const orderDiv = document.createElement('div');
                    orderDiv.className = 'liveOrders';
                    orderDiv.setAttribute('data-order-id', order.id);
                    orderDiv.innerHTML = `
                        <ul>${order.ticketName || 'Unknown'}</ul>
                        <ul>${order.items || 'No items'}</ul>
                        <ul>${order.createdAtEST || 'Unknown time'}</ul>
                    `;
                    container.appendChild(orderDiv);
                });

                if (relevantOrders.length >= 6) {
                    startScrolling(container);
                }
            }

            function updateOrder(data) {
                const orderId = data.id;
                const status = data.status;
            }

            function statusToContainerId(status) {
                const mapping = {
                    'pending': 'prePrepOrders',
                    'in the oven': 'inOvenOrders',
                    'ready for pickup': 'readyForPickupOrders'
                };
                return mapping[status] || '';
            }

            function startScrolling(container) {
                let scrollPosition = 0;
                const scrollHeight = container.scrollHeight;
                const visibleHeight = container.clientHeight;
                const scrollSpeed = .3; 

                function scroll() {
                    scrollPosition += scrollSpeed;
                    if (scrollPosition >= scrollHeight - visibleHeight) {
                        scrollPosition = 0;
                    }
                    container.scrollTop = scrollPosition;
                    requestAnimationFrame(scroll);
                }

                scroll();
            }
        });
    </script>
</body>
</html>